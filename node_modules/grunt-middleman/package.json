{
  "name": "grunt-middleman",
  "description": "A grunt plugin for running Middleman.",
  "version": "0.1.2",
  "homepage": "https://github.com/patrickarlt/grunt-middleman",
  "author": {
    "name": "Patrick Arlt",
    "email": "patrick.arlt@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/patrickarlt/grunt-middleman.git"
  },
  "bugs": {
    "url": "https://github.com/patrickarlt/grunt-middleman/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/patrickarlt/grunt-middleman/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.6.0",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.2.0",
    "grunt": "~0.4.1"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "gruntplugin"
  ],
  "readme": "# grunt-middleman\n\n> A grunt plugin for running Middleman.\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-middleman --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-middleman');\n```\n\n## The \"middleman\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `middleman` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  middleman: {\n    options: {\n      useBundle: true\n    },\n    server: {},\n    build: {\n      options: {\n        command: \"build\"\n      }\n    }\n  }\n})\n```\n\n### Options\n\n#### options.command\nType: `String`\nDefault value: `'server'`\n\nThis is the command that Middleman will execute. It should be `'server'` or `'build'`. Certain properties can only be used with `'server'` or `'build'`\n\n#### options.useBundle\nType: `Boolean`\nDefault value: `false`\n\nIf you are using Bundler set this to true to prefix your command with `bundle exec`.\n\n#### options.environment\nType: `String`\nDefault value: `'development'`\n\nSet the Ruby environment that your command will run in. Generally you should let Middleman handle this.\n\n#### options.host\nType: `String`\nDefault value: `'0.0.0.0'`\n\nWhich host middleman will run on. Localhost by default. **Server only**\n\n#### options.port\nType: `Integer`\nDefault value: `4567`\n\nThe port the Middleman server will run on. **Server only**\n\n#### options.glob\nType: `String`\nDefault value: `false`\n\nBuilds a subset of the Middleman site. **Build only**\n\n#### options.verbose\nType: `Boolean`\nDefault value: `false`\n\nEnable verbose output.\n\n#### options.clean\nType: `Boolean`\nDefault value: `false`\n\nRemove orphaned files from build. **Build only**\n\n#### options.env\nType: `Object`\nDefault value: `{}`\n\nAdditional environment variables to set. This is useful for passing options into your `config.rb` file\n\n### Usage Examples\n\n#### Default Options\nIn this example the default options will start the Middleman server on port 4567 when you run `grunt middleman`.\n\n```js\ngrunt.initConfig({\n  middleman: {\n    options: {\n      command: \"server\",\n      useBundle: false,\n      environment: \"development\",\n      host: \"0.0.0.0\",\n      port: 4567,\n      glob: false,\n      verbose: false,\n      clean: false,\n      env: {}\n    }\n  }\n});\n```\n\n#### Custom Options\nThis configuration will use bundler to execute `middleman build` or `middleman server` when you run `grunt middleman:build` or `grunt middleman:server`.\n\n```js\ngrunt.initConfig({\n  middleman: {\n    options: {\n      useBundle: true\n    },\n    server: {},\n    build: {\n      options: {\n        command: \"build\"\n      }\n    }\n  }\n})\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n",
  "readmeFilename": "README.md",
  "_id": "grunt-middleman@0.1.2",
  "dist": {
    "shasum": "4db55ec01fad37ae6fa7c31363723473b5fda615",
    "tarball": "http://registry.npmjs.org/grunt-middleman/-/grunt-middleman-0.1.2.tgz"
  },
  "_from": "grunt-middleman@^0.1.2",
  "_npmVersion": "1.3.11",
  "_npmUser": {
    "name": "patrickarlt",
    "email": "patrick.arlt@gmail.com"
  },
  "maintainers": [
    {
      "name": "patrickarlt",
      "email": "patrick.arlt@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "4db55ec01fad37ae6fa7c31363723473b5fda615",
  "_resolved": "https://registry.npmjs.org/grunt-middleman/-/grunt-middleman-0.1.2.tgz"
}
